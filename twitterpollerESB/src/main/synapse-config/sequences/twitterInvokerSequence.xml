<?xml version="1.0" encoding="UTF-8"?>
<sequence xmlns="http://ws.apache.org/ns/synapse" name="twitterInvokerSequence">
    <property xmlns:xsd="http://dto.twitterpoller.yucca.csi.org/xsd" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://org.apache.synapse/xsd" xmlns:twit="http://twitterpoller.yucca.csi.org" name="tenantCod" expression="$body/twit:invokeTwitter/twit:streamInfo/xsd:tenatcode" scope="default" type="STRING"/>
    <callout serviceURL="mb.axistwitter.http.balancer.url" action="invokeTwitter">
        <source xmlns:xsd="http://dto.twitterpoller.yucca.csi.org/xsd" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://org.apache.synapse/xsd" xmlns:twit="http://twitterpoller.yucca.csi.org" xpath="$body/child::*"/>
        <target xmlns:xsd="http://dto.twitterpoller.yucca.csi.org/xsd" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://org.apache.synapse/xsd" xmlns:twit="http://twitterpoller.yucca.csi.org" xpath="$body/child::*"/>
    </callout>
    <xslt key="twitterPollerRemoveNullXSLTTMP"/>
    <property name="messageType" value="application/json" scope="axis2" type="STRING"/>
    <property xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://org.apache.synapse/xsd" name="hasError" expression="boolean($body/invokeTwitterResponse/return/errore/twtErrorCode)" scope="default" type="STRING"/>
    <filter xmlns:ns="http://org.apache.synapse/xsd" source="get-property('hasError')" regex="true">
        <then>
            <property xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" name="twterrocode" expression="$body/invokeTwitterResponse/return/errore/twtErrorCode" scope="default" type="STRING"/>
            <property xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" name="twterrormessage" expression="$body/invokeTwitterResponse/return/errore/twtErrorMessage" scope="default" type="STRING"/>
            <call-template target="SendToMessageBrokerAndRespondErrorSequence">
            <with-param name="mb_url" value="mb.external.jms.url"/>
            <with-param name="mb_user" value="mb.external.user"/>
            <with-param name="mb_pwd" value="mb.external.pwd"/>
                <with-param name="mb_destination_name" value="{fn:concat('output.',fn:get-property('tenantCod'),'.','errors')}"/>
                <with-param name="mb_destination_type" value="topic"/>
                <with-param name="error_name" value="{get-property('twterrormessage')}"/>
                <with-param name="error_code" value="{get-property('twterrocode')}"/>
            </call-template>
        </then>
        <else>
            <property xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" name="streamId" expression="$body/invokeTwitterResponse/return/stream" scope="default" type="STRING"/>
            <property xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" name="sourceId" expression="$body/invokeTwitterResponse/return/sensor" scope="default" type="STRING"/>
            <iterate xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" continueParent="true" preservePayload="true" attachPath="$body/invokeTwitterResponse/return" expression="$body/invokeTwitterResponse/return/values" sequential="true">
                <target>
                    <sequence>
                        <property name="componenti" expression="$body/invokeTwitterResponse/return/values/components" scope="default" type="OM"/>
                        <property name="data" expression="$body/invokeTwitterResponse/return/values/time" scope="default" type="STRING"/>
                        <payloadFactory media-type="xml">
                            <format>
                                <jsonObject>
                                    <sensor>$1</sensor>
                                    <stream>$2</stream>
                                    <values>$3                                                                                                                                                                                                       
                              <time>$4</time>
                                    </values>
                                </jsonObject>
                            </format>
                            <args>
                                <arg evaluator="xml" expression="get-property('sourceId')"/>
                                <arg evaluator="xml" expression="get-property('streamId')"/>
                                <arg evaluator="xml" expression="get-property('componenti')"/>
                                <arg evaluator="xml" expression="get-property('data')"/>
                            </args>
                        </payloadFactory>
                        <call-template target="SendToMessageBrokerSequence">
            <with-param name="mb_url" value="mb.internal.jms.url"/>
            <with-param name="mb_user" value="mb.internal.user"/>
            <with-param name="mb_pwd" value="mb.internal.pwd"/>
                            <with-param name="mb_destination_name" value="{fn:concat('input.',fn:get-property('tenantCod'),'.',fn:get-property('sourceId'),'_',fn:get-property('streamId'))}"/>
                            <with-param name="mb_destination_type" value="topic"/>
                        </call-template>
                        <property name="messageType" value="application/json" scope="axis2" type="STRING"/>
                        <send/>
                    </sequence>
                </target>
            </iterate>
        </else>
    </filter>
</sequence>
