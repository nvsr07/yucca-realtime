<?xml version="1.0" encoding="UTF-8"?>
<api xmlns="http://ws.apache.org/ns/synapse" name="__tenant___http" context="/services/__tenant__">
    <resource methods="POST" uri-template="/{streamId}">
        <inSequence>
            <class name="org.csi.yucca.realtime.mediator.FormatValidMediator">
                <property name="variabileResult" value="isFormatValid"/>
            </class>
            <filter source="get-property('isFormatValid')" regex="true">
                <then>
                    <call-template target="ValidateMessage" description="validate">
                        <with-param name="schemaToValidate" value="{fn:concat('gov:xsd/',fn:get-property('uri.var.streamId'),'Types.xsd')}"/>
                    </call-template>
                    <filter source="get-property('errorOnValidate')" regex="true">
                        <then>
                            <call-template target="SendToMessageBrokerAndRespondErrorSequence" description="">
                                <with-param name="mb_url" value="mb.external.jms.url"/>
                                <with-param name="mb_user" value="mb.external.user"/>
                                <with-param name="mb_pwd" value="mb.external.pwd"/>
                                <with-param name="mb_destination_name" value="{{fn:concat('output.__tenant__.','errors')}}"/>
                                <with-param name="mb_destination_type" value="topic"/>
                                <with-param name="error_name" value="Json components are not coherent with stream definition"/>
                                <with-param name="error_code" value="E013"/>
                            </call-template>
                        </then>
                        <else>
                            <property name="FORCE_SC_ACCEPTED" value="true" scope="axis2" type="STRING"/>
                            <iterate xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" continueParent="true" preservePayload="true" attachPath="$body/jsonObject" expression="$body/jsonObject/Values" sequential="true">
                                <target>
                                    <sequence>
                                        <log level="full">
                                            <property name="streamId_src" expression="get-property('uri.var.streamId')"/>
                                            <property name="sequence" value="IN"/>
                                        </log>
                                        <call-template target="SendToMessageBrokerSequence" description="">
                                            <with-param name="mb_url" value="mb.internal.jms.url"/>
                                            <with-param name="mb_user" value="mb.internal.user"/>
                                            <with-param name="mb_pwd" value="mb.internal.pwd"/>
                                            <with-param name="mb_destination_name" value="{fn:concat('input.__tenant__.',fn:get-property('uri.var.streamId'))}"/>
                                            <with-param name="mb_destination_type" value="topic"/>
                                        </call-template>
                                        <send/>
                                    </sequence>
                                </target>
                            </iterate>
                        </else>
                    </filter>
                </then>
                <else>
                    <call-template target="SendToMessageBrokerAndRespondErrorSequence" description="">
                        <with-param name="mb_url" value="mb.external.jms.url"/>
                        <with-param name="mb_user" value="mb.external.user"/>
                        <with-param name="mb_pwd" value="mb.external.pwd"/>
                        <with-param name="mb_destination_name" value="{{fn:concat('output.__tenant__.','errors')}}"/>
                        <with-param name="mb_destination_type" value="topic"/>
                        <with-param name="error_name" value="Json validation failed"/>
                        <with-param name="error_code" value="E012"/>
                    </call-template>
                </else>
            </filter>
        </inSequence>
        <outSequence>
            <log>
                <property name="streamId" expression="get-property('uri.var.streamId')"/>
                <property name="sequence" value="OUT"/>
            </log>
        </outSequence>
        <faultSequence>
            <call-template target="SendToMessageBrokerAndRespondErrorSequence" description="">
                <with-param name="mb_url" value="mb.external.jms.url"/>
                <with-param name="mb_user" value="mb.external.user"/>
                <with-param name="mb_pwd" value="mb.external.pwd"/>
                <with-param name="mb_destination_name" value="{{fn:concat('output.__tenant__.','errors')}}"/>
                <with-param name="mb_destination_type" value="topic"/>
                <with-param name="error_name" value="Stream unknown"/>
                <with-param name="error_code" value="E011"/>
            </call-template>
        </faultSequence>
    </resource>
    <handlers>
        <handler class="org.csi.yucca.realtime.authhandler.AuthenticationHandler">
            <property name="username" value="__user__"/>
            <property name="password" value="__password__"/>
        </handler>
    </handlers>
</api>
