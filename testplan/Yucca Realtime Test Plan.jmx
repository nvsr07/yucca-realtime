<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Yucca Realtime Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group HTTP Events" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1405616502000</longProp>
        <longProp name="ThreadGroup.end_time">1405616502000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename">D:\Users\1759\Documents\GitHub\yucca-realtime\testplan\log.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Http Auth tests" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Auth Fail (No auth)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
&quot;Stream&quot;: &quot;flussoProva&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } &#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/input/ten1/flussoProva</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">No authentication header</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;401&quot;) == true) { 
   prev.setSuccessful(true);  

    /* the same is 
    prev.setSuccessful(true);
    prev.setResponseCodeOK();
    prev.setResponseMessageOK();
    */
}</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header working" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Auth Fail (User pwd errors)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
&quot;Stream&quot;: &quot;flussoProva&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } &#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/input/ten1/flussoProva</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">No authentication header</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header working" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic dXNlcjpsssteXBhc3M=</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51511">403</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1636001378">error_name</stringProp>
                <stringProp name="239541989">Authentication Failed</stringProp>
                <stringProp name="2103245">E002</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;403&quot;) == true) { 
   prev.setSuccessful(true);  

    /* the same is 
    prev.setSuccessful(true);
    prev.setResponseCodeOK();
    prev.setResponseMessageOK();
    */
}</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Auth Good " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
&quot;Stream&quot;: &quot;flussoProva&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } &#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/input/ten1/flussoProva</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header working" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic dXNlcjpteXBhc3M=</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49588">202</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Http Validation test" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header working" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic dXNlcjpteXBhc3M=</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP unknown tenant" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
&quot;Stream&quot;: &quot;flussoProva&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } &#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/input/unknownTen/flussoProva</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="52469">500</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="19968756">Tenant unknown</stringProp>
                <stringProp name="2103244">E001</stringProp>
                <stringProp name="708367686">platform.errors</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;500&quot;) == true) { 
   prev.setSuccessful(true);  

    /* the same is 
    prev.setSuccessful(true);
    prev.setResponseCodeOK();
    prev.setResponseMessageOK();
    */
}</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP unknown stream" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &#xd;
&quot;Stream&quot;: &quot;flussoProvaUnknown&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } &#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/input/ten1/flussoProva22</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="52469">500</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="364897226">Stream unknown</stringProp>
                <stringProp name="2103275">E011</stringProp>
                <stringProp name="-1538261275">ten1.errors</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;500&quot;) == true) { 
   prev.setSuccessful(true);  

    /* the same is 
    prev.setSuccessful(true);
    prev.setResponseCodeOK();
    prev.setResponseMessageOK();
    */
}</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP json validation failed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ [&#xd;
&quot;Stream&quot;: &quot;flussoProva&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } &#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout">1000</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/input/ten1/flussoProva</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="52469">500</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="455105708">Json validation failed</stringProp>
                <stringProp name="2103276">E012</stringProp>
                <stringProp name="-1538261275">ten1.errors</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;500&quot;) == true) { 
   prev.setSuccessful(true);  

    /* the same is 
    prev.setSuccessful(true);
    prev.setResponseCodeOK();
    prev.setResponseMessageOK();
    */
}</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP json coherence failed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Stream&quot;: &quot;flussoProva&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;pressure&quot;:&quot;100&quot; } &#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout">1000</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/input/ten1/flussoProva</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="52469">500</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1770564660">Json components are not coherent with stream definition</stringProp>
                <stringProp name="2103277">E013</stringProp>
                <stringProp name="-1538261275">ten1.errors</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;500&quot;) == true) { 
   prev.setSuccessful(true);  

    /* the same is 
    prev.setSuccessful(true);
    prev.setResponseCodeOK();
    prev.setResponseMessageOK();
    */
}</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP json multiple events" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Stream&quot;: &quot;flussoProva&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; }&#xd;
},&#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:59+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;19.4&quot;, &quot;wind&quot;:&quot;59&quot; }&#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
            <stringProp name="HTTPSampler.port">80</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout">1000</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/input/ten1/flussoProva</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49588">202</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Http end to end test on websocket" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header working" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic dXNlcjpteXBhc3M=</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="One simple message" enabled="true"/>
          <hashTree>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Connection - mywe" enabled="true">
              <stringProp name="serverAddress">${__P(esbin_server)}</stringProp>
              <stringProp name="serverPort">80</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">${__P(websocket_path)}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">CONNECT</stringProp>
              <stringProp name="connectionTimeout">20000</stringProp>
              <stringProp name="responseTimeout">20000</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">mywe</stringProp>
              <stringProp name="responsePattern">CONNECTED</stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">1</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="accept-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1.1,1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">accept-version</stringProp>
                  </elementProp>
                  <elementProp name="heart-beat" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">heart-beat</stringProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">guest</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                  </elementProp>
                  <elementProp name="passcode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">guest</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passcode</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket SUBSCRIBE raw  mywe" enabled="true">
              <stringProp name="serverAddress">${__P(esbin_server)}</stringProp>
              <stringProp name="serverPort">80</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">${__P(websocket_path)}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">SUBSCRIBE</stringProp>
              <stringProp name="connectionTimeout">20000</stringProp>
              <stringProp name="responseTimeout">20000</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">mywe</stringProp>
              <stringProp name="responsePattern">MESSAGE</stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">0</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">sub-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">/topic/output.ten1.flussoProva</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP json simple  event" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;Stream&quot;: &quot;flussoProva&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; }&#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
              <stringProp name="HTTPSampler.port">80</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout">1000</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/input/ten1/flussoProva</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49588">202</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Verify mywe" enabled="true">
              <stringProp name="serverAddress">${__P(esbin_server)}</stringProp>
              <stringProp name="serverPort">80</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">${__P(websocket_path)}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload"></stringProp>
              <stringProp name="connectionTimeout">20000</stringProp>
              <stringProp name="responseTimeout">20000</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">mywe</stringProp>
              <stringProp name="responsePattern">MESSAGE</stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">1</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Disconnect mywe" enabled="true">
              <stringProp name="serverAddress">${__P(esbin_server)}</stringProp>
              <stringProp name="serverPort">80</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">${__P(websocket_path)}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">DISCONNECT</stringProp>
              <stringProp name="connectionTimeout">20000</stringProp>
              <stringProp name="responseTimeout">20000</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">mywe</stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">0</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="One multiple (two) complex message" enabled="true"/>
          <hashTree>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Connection - mywe2" enabled="true">
              <stringProp name="serverAddress">${__P(esbin_server)}</stringProp>
              <stringProp name="serverPort">80</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">${__P(websocket_path)}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">CONNECT</stringProp>
              <stringProp name="connectionTimeout">20000</stringProp>
              <stringProp name="responseTimeout">20000</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">mywe2</stringProp>
              <stringProp name="responsePattern">CONNECTED</stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">1</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="accept-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1.1,1.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">accept-version</stringProp>
                  </elementProp>
                  <elementProp name="heart-beat" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">heart-beat</stringProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">guest</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                  </elementProp>
                  <elementProp name="passcode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">guest</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">passcode</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket SUBSCRIBE raw  mywe2" enabled="true">
              <stringProp name="serverAddress">${__P(esbin_server)}</stringProp>
              <stringProp name="serverPort">80</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">${__P(websocket_path)}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">SUBSCRIBE</stringProp>
              <stringProp name="connectionTimeout">20000</stringProp>
              <stringProp name="responseTimeout">20000</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">mywe2</stringProp>
              <stringProp name="responsePattern">MESSAGE</stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">0</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">sub-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                  </elementProp>
                  <elementProp name="destination" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">/topic/output.ten1.flussoProva</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">destination</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP json simple  event" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
&quot;Stream&quot;: &quot;flussoProva&quot;,&#xd;
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,&#xd;
&quot;Values&quot;: [ &#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; }&#xd;
},&#xd;
{ &#xd;
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, &#xd;
&quot;components&quot;: { &quot;temp&quot;: &quot;17.9&quot;, &quot;wind&quot;:&quot;51&quot; }&#xd;
}&#xd;
]&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${__P(esbin_server)}</stringProp>
              <stringProp name="HTTPSampler.port">80</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout">1000</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/input/ten1/flussoProva</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49588">202</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket VErify mywe2" enabled="true">
              <stringProp name="serverAddress">${__P(esbin_server)}</stringProp>
              <stringProp name="serverPort">80</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">${__P(websocket_path)}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload"></stringProp>
              <stringProp name="connectionTimeout">20000</stringProp>
              <stringProp name="responseTimeout">20000</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">mywe2</stringProp>
              <stringProp name="responsePattern">MESSAGE</stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">2</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Disconnect mywe2" enabled="true">
              <stringProp name="serverAddress">${__P(esbin_server)}</stringProp>
              <stringProp name="serverPort">80</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">${__P(websocket_path)}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">DISCONNECT</stringProp>
              <stringProp name="connectionTimeout">20000</stringProp>
              <stringProp name="responseTimeout">20000</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId">mywe2</stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">0</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Mqtt Auth tests" enabled="true"/>
        <hashTree>
          <org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler guiclass="org.apache.jmeter.protocol.mqtt.control.gui.MQTTPublisherGui" testclass="org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler" testname="MQTT Auth Fail (No auth)" enabled="false">
            <stringProp name="mqtt.provider_url">tcp://${__P(esbin_server)}:${__P(mqtt_port)}</stringProp>
            <stringProp name="mqtt.topic">input/ten1/flussoProva</stringProp>
            <stringProp name="mqtt.security_principle">system</stringProp>
            <stringProp name="mqtt.security_credentials">manager</stringProp>
            <stringProp name="mqtt.text_message">{ 
&quot;Stream&quot;: &quot;flussoProva&quot;,
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,
&quot;Values&quot;: [ 
{ 
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, 
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } 
}
]
}
</stringProp>
            <stringProp name="mqtt.config_msg_type">mqtt_text_message</stringProp>
            <stringProp name="mqtt.iterations">1</stringProp>
            <boolProp name="mqtt.authenticate">false</boolProp>
            <stringProp name="mqtt.quality">mqtt_at_most_once</stringProp>
            <boolProp name="mqtt.retain">false</boolProp>
            <stringProp name="mqtt.type_fixed_value">mqtt_int_value</stringProp>
            <stringProp name="mqtt.fixed_value"></stringProp>
            <stringProp name="mqtt.type_random_value">mqtt_pseudo_random</stringProp>
            <stringProp name="mqtt.max_random_value"></stringProp>
            <stringProp name="mqtt.min_random_value"></stringProp>
            <stringProp name="mqtt.type_generated_value">mqtt_int_value</stringProp>
            <stringProp name="mqtt.seed"></stringProp>
            <boolProp name="mqtt.use_timestamp">false</boolProp>
            <boolProp name="mqtt.use_number_sequence">false</boolProp>
            <stringProp name="mqtt.clientid">10</stringProp>
            <stringProp name="mqtt.format">mqtt_no_encoding</stringProp>
            <stringProp name="mqtt.charset">UTF-8</stringProp>
            <stringProp name="mqtt.size_array"></stringProp>
            <stringProp name="mqtt.strategy">mqtt_round_robin</stringProp>
            <boolProp name="mqtt.one_connection_per_topic">false</boolProp>
            <boolProp name="mqtt.random_suffix_client_id">false</boolProp>
            <stringProp name="mqtt.suffix.length"></stringProp>
          </org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">if (prev.isSuccessful()== false) { 
   prev.setSuccessful(true);  
    /* the same is 
    prev.setSuccessful(true);
    prev.setResponseCodeOK();
    prev.setResponseMessageOK();
    */
}
else 
   prev.setSuccessful(false);  
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler guiclass="org.apache.jmeter.protocol.mqtt.control.gui.MQTTPublisherGui" testclass="org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler" testname="MQTT Auth Fail (User pwd errors)" enabled="false">
            <stringProp name="mqtt.provider_url">tcp://${__P(esbin_server)}:${__P(mqtt_port)}</stringProp>
            <stringProp name="mqtt.topic">input/ten1/flussoProva</stringProp>
            <stringProp name="mqtt.security_principle">ten1</stringProp>
            <stringProp name="mqtt.security_credentials">dddddd</stringProp>
            <stringProp name="mqtt.text_message">{ 
&quot;Stream&quot;: &quot;flussoProva&quot;,
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,
&quot;Values&quot;: [ 
{ 
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, 
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } 
}
]
}
</stringProp>
            <stringProp name="mqtt.config_msg_type">mqtt_text_message</stringProp>
            <stringProp name="mqtt.iterations">1</stringProp>
            <boolProp name="mqtt.authenticate">true</boolProp>
            <stringProp name="mqtt.quality">mqtt_at_most_once</stringProp>
            <boolProp name="mqtt.retain">false</boolProp>
            <stringProp name="mqtt.type_fixed_value">mqtt_int_value</stringProp>
            <stringProp name="mqtt.fixed_value"></stringProp>
            <stringProp name="mqtt.type_random_value">mqtt_pseudo_random</stringProp>
            <stringProp name="mqtt.max_random_value"></stringProp>
            <stringProp name="mqtt.min_random_value"></stringProp>
            <stringProp name="mqtt.type_generated_value">mqtt_int_value</stringProp>
            <stringProp name="mqtt.seed"></stringProp>
            <boolProp name="mqtt.use_timestamp">false</boolProp>
            <boolProp name="mqtt.use_number_sequence">false</boolProp>
            <stringProp name="mqtt.clientid">13</stringProp>
            <stringProp name="mqtt.format">mqtt_no_encoding</stringProp>
            <stringProp name="mqtt.charset">UTF-8</stringProp>
            <stringProp name="mqtt.size_array"></stringProp>
            <stringProp name="mqtt.strategy">mqtt_round_robin</stringProp>
            <boolProp name="mqtt.one_connection_per_topic">false</boolProp>
            <boolProp name="mqtt.random_suffix_client_id">false</boolProp>
            <stringProp name="mqtt.suffix.length"></stringProp>
          </org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">if (prev.isSuccessful()== false) { 
   prev.setSuccessful(true);  
    /* the same is 
    prev.setSuccessful(true);
    prev.setResponseCodeOK();
    prev.setResponseMessageOK();
    */
}
else 
   prev.setSuccessful(false);  
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler guiclass="org.apache.jmeter.protocol.mqtt.control.gui.MQTTPublisherGui" testclass="org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler" testname="MQTT Auth Fail (User not allowed)" enabled="false">
            <stringProp name="mqtt.provider_url">tcp://${__P(esbin_server)}:${__P(mqtt_port)}</stringProp>
            <stringProp name="mqtt.topic">output/ten12/flussoProva/raw</stringProp>
            <stringProp name="mqtt.security_principle">guest</stringProp>
            <stringProp name="mqtt.security_credentials">guest</stringProp>
            <stringProp name="mqtt.text_message">{ 
&quot;Stream&quot;: &quot;flussoProva&quot;,
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,
&quot;Values&quot;: [ 
{ 
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, 
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } 
}
]
}
</stringProp>
            <stringProp name="mqtt.config_msg_type">mqtt_text_message</stringProp>
            <stringProp name="mqtt.iterations">1</stringProp>
            <boolProp name="mqtt.authenticate">true</boolProp>
            <stringProp name="mqtt.quality">mqtt_at_most_once</stringProp>
            <boolProp name="mqtt.retain">false</boolProp>
            <stringProp name="mqtt.type_fixed_value">mqtt_int_value</stringProp>
            <stringProp name="mqtt.fixed_value"></stringProp>
            <stringProp name="mqtt.type_random_value">mqtt_pseudo_random</stringProp>
            <stringProp name="mqtt.max_random_value"></stringProp>
            <stringProp name="mqtt.min_random_value"></stringProp>
            <stringProp name="mqtt.type_generated_value">mqtt_int_value</stringProp>
            <stringProp name="mqtt.seed"></stringProp>
            <boolProp name="mqtt.use_timestamp">false</boolProp>
            <boolProp name="mqtt.use_number_sequence">false</boolProp>
            <stringProp name="mqtt.clientid">13</stringProp>
            <stringProp name="mqtt.format">mqtt_no_encoding</stringProp>
            <stringProp name="mqtt.charset">UTF-8</stringProp>
            <stringProp name="mqtt.size_array"></stringProp>
            <stringProp name="mqtt.strategy">mqtt_round_robin</stringProp>
            <boolProp name="mqtt.one_connection_per_topic">false</boolProp>
            <boolProp name="mqtt.random_suffix_client_id">false</boolProp>
            <stringProp name="mqtt.suffix.length"></stringProp>
          </org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">if (prev.isSuccessful()== false) { 
   prev.setSuccessful(true);  
    /* the same is 
    prev.setSuccessful(true);
    prev.setResponseCodeOK();
    prev.setResponseMessageOK();
    */
}
else 
   prev.setSuccessful(false);  
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler guiclass="org.apache.jmeter.protocol.mqtt.control.gui.MQTTPublisherGui" testclass="org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler" testname="MQTT Auth Good" enabled="true">
            <stringProp name="mqtt.provider_url">tcp://${__P(esbin_server)}:${__P(mqtt_port)}</stringProp>
            <stringProp name="mqtt.topic">input/ten1</stringProp>
            <stringProp name="mqtt.security_principle">ten1</stringProp>
            <stringProp name="mqtt.security_credentials">guest</stringProp>
            <stringProp name="mqtt.text_message">{ 
&quot;Stream&quot;: &quot;flussoProva&quot;,
&quot;Sensor&quot;: &quot;550e8400-e29b-41d4-a716-446655440002&quot;,
&quot;Values&quot;: [ 
{ 
&quot;time&quot;: &quot;2014-05-13T17:08:58+0200&quot;, 
&quot;components&quot;: { &quot;temp&quot;: &quot;17.4&quot;, &quot;wind&quot;:&quot;50&quot; } 
}
]
}
</stringProp>
            <stringProp name="mqtt.config_msg_type">mqtt_text_message</stringProp>
            <stringProp name="mqtt.iterations">1</stringProp>
            <boolProp name="mqtt.authenticate">true</boolProp>
            <stringProp name="mqtt.quality">mqtt_at_most_once</stringProp>
            <boolProp name="mqtt.retain">false</boolProp>
            <stringProp name="mqtt.type_fixed_value">mqtt_int_value</stringProp>
            <stringProp name="mqtt.fixed_value"></stringProp>
            <stringProp name="mqtt.type_random_value">mqtt_pseudo_random</stringProp>
            <stringProp name="mqtt.max_random_value"></stringProp>
            <stringProp name="mqtt.min_random_value"></stringProp>
            <stringProp name="mqtt.type_generated_value">mqtt_int_value</stringProp>
            <stringProp name="mqtt.seed"></stringProp>
            <boolProp name="mqtt.use_timestamp">false</boolProp>
            <boolProp name="mqtt.use_number_sequence">false</boolProp>
            <stringProp name="mqtt.clientid">11</stringProp>
            <stringProp name="mqtt.format">mqtt_no_encoding</stringProp>
            <stringProp name="mqtt.charset">UTF-8</stringProp>
            <stringProp name="mqtt.size_array"></stringProp>
            <stringProp name="mqtt.strategy">mqtt_round_robin</stringProp>
            <boolProp name="mqtt.one_connection_per_topic">false</boolProp>
            <boolProp name="mqtt.random_suffix_client_id">false</boolProp>
            <stringProp name="mqtt.suffix.length"></stringProp>
          </org.apache.jmeter.protocol.mqtt.sampler.PublisherSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
